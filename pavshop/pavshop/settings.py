"""
Django settings for pavshop project.

Generated by 'django-admin startproject' using Django 4.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

from pathlib import Path
import os


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-#7hijxnh@3n7^hgn2@@&f5a1z3fd$ngq@^u34#627-1yp%tioj'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'modeltranslation',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # custom apps
    'authentication',
    'blogs',
    'products',
    'shopping_cart',
    'base',

    # third party
    'phonenumber_field',
    'phonenumbers',
    'ckeditor',
    'ckeditor_uploader',
    'djmoney.contrib.exchange',
    'django_countries',
    'social_django',
    'django_translation_flags',
    'rosetta',
    'rest_framework',
    'drf_yasg',
    'drf_spectacular',
    'django_celery_beat',

    
    
]






MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'social_django.middleware.SocialAuthExceptionMiddleware',
    'pavshop.middleware.SaveIpAdressMiddleware',
    'pavshop.middleware.BlockIpAddress'


]

ROOT_URLCONF = 'pavshop.urls'



TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'social_django.context_processors.backends', 
                'social_django.context_processors.login_redirect',
                'base.context_processors.newsletter_context'
            ],
        },
    },
]

WSGI_APPLICATION = 'pavshop.wsgi.application'




AUTHENTICATION_BACKENDS = [
    # 'django.contrib.auth.backends.AllowAllUsersModelBackend',
    'social_core.backends.facebook.FacebookOAuth2',
    'social_core.backends.google.GoogleOAuth2',
    'social_core.backends.twitter.TwitterOAuth',
    'django.contrib.auth.backends.ModelBackend',
    # 'django.contrib.auth.backends.AllowAllUsersModelBackend',
]


REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.BasicAuthentication',
       
    ),
    'DEFAULT_SCHEMA_CLASS': 'drf_spectacular.openapi.AutoSchema',
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 4,
    
}


SPECTACULAR_SETTINGS = {
    'TITLE': 'Your Project API',
    'DESCRIPTION': 'Your project description',
    'VERSION': '1.0.0',
    'SERVE_INCLUDE_SCHEMA': False,
    # OTHER SETTINGS
}





from datetime import timedelta

SIMPLE_JWT = {
    "ACCESS_TOKEN_LIFETIME": timedelta(minutes=5),
    "TOKEN_OBTAIN_SERIALIZER": "authentication.api.serializers.UserTokenSerializer",

}


# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

DATABASES = {
    # 'default': {
    #     'ENGINE': 'django.db.backends.sqlite3',
    #     'NAME': BASE_DIR / 'db.sqlite3',
    # },


    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': 'shops_db',
        'USER': 'pavshop_user',
        'PASSWORD': 'pavshop_password',
        'HOST': 'localhost',
        'PORT': '5432',
    }
    


}



AUTH_USER_MODEL = 'authentication.User'


# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'az'

LOCALE_PATHS = (
    os.path.join(BASE_DIR, 'locale'),

)

LANGUAGES = (
    ('en', 'English'),
    ('ru', 'Russian'),
    ('az', 'Azerbaijan'),
)

TIME_ZONE = 'UTC'
# Asia/Baku
USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = 'static/'


STATICFILES_DIRS = [
    BASE_DIR, "static/",
]


# STATIC_ROOT -  the absolute path to the directory where "collectstatic" will collect static files for deployment
# STATIC_ROOT = "/static/"  



# CKEditor Settings

CKEDITOR_UPLOAD_PATH = "uploads/"

CKEDITOR_CONFIGS = {
    'default': {
        'toolbar': 'full',
        'height': 300,
        'width': 900,
    },
}

CKEDITOR_IMAGE_BACKEND = "pillow"
CKEDITOR_JQUERY_URL = '//ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js'

MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media/'





# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


OPEN_EXCHANGE_RATES_APP_ID = '9401e366b69a4a3aaf50a0cc9a318b71'



from django.contrib.messages import constants as messages
MESSAGE_TAGS = {
        messages.DEBUG: 'alert-secondary',
        messages.INFO: 'alert-info',
        messages.SUCCESS: 'alert-success',
        messages.WARNING: 'alert-warning',
        messages.ERROR: 'alert-danger',
}





# Social Auth Django ucun login/logout url's
LOGIN_URL = 'login_page'
LOGIN_REDIRECT_URL = 'profiles'
LOGOUT_URL = 'logout'
LOGOUT_REDIRECT_URL = ''
# LOGOUT_REDIRECT_URL = 'logout'






# Facebook

SOCIAL_AUTH_FACEBOOK_KEY = 661766929298954        # App ID
SOCIAL_AUTH_FACEBOOK_SECRET = 'ec441897c32b5a9aabd8edf73df8fe2f'  # App Secret
SOCIAL_AUTH_FACEBOOK_SCOPE = ['email', 'user_link']
SOCIAL_AUTH_FACEBOOK_PROFILE_EXTRA_PARAMS = {
  'fields': 'id, name, email, picture.type(large), link'
}

SOCIAL_AUTH_FACEBOOK_EXTRA_DATA = [
    ('name', 'name'),
    ('email', 'email'),
    ('picture', 'picture'),
    ('link', 'profile_url'),
]

# Google

SOCIAL_AUTH_GOOGLE_OAUTH2_KEY = '466229469446-jb7d5kjb6kqsrbr4civeo55tsphlcqut.apps.googleusercontent.com'
SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET = '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'
# SOCIAL_AUTH_GOOGLE_PROFILE_EXTRA_PARAMS = {
#   'fields': 'id, picture'
# }



# SOCIAL_AUTH_GOOGLE_EXTRA_DATA = [
#     ('picture', 'picture'),
    
# ]

# Twitter

SOCIAL_AUTH_TWITTER_KEY = 'wjJo9dTywks19HxE7zSTQM193'
SOCIAL_AUTH_TWITTER_SECRET = 'l8iLAPrfYGb4LezntHV0qZq7b7ONQL5RRnbxPka1TrW3P1xU0J'






# Phone number config
PHONENUMBER_DB_FORMAT = 'RFC3966'


# Confirmation Mail
# EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_USE_TLS = True
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_HOST_USER = 'parvanayva@gmail.com'
EMAIL_HOST_PASSWORD = 'tbvfozpvicsedomt'
EMAIL_PORT = 587   # gmail portu 587-dir



# Celery settings
CELERY_BROKER_URL = "redis://localhost:6379"
CELERY_RESULT_BACKEND = "redis://localhost:6379"
